homeassistant:
  name: Home
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 620
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago
  # Customization file
  customize: !include customize.yaml
  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 127.0.0.1
        - !secret trusted_network_1
    - type: homeassistant

# Enables the frontend
frontend:
  themes: !include themes.yaml
  javascript_version: latest

# Enables configuration UI
config:
system_health:
notify:
mobile_app:
conversation:
history:
logbook:
map:
sun:
cloud:
stream:
ffmpeg:
ios:

zone:
  - name: work
    latitude: !secret work_latitude
    longitude: !secret work_longitude
# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  base_url: !secret base_url

# Discover some devices automatically
discovery:
  # ignore:
  #   - roku

mqtt:
  broker: !secret local_ip
  port: 1883
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: true
  discovery_prefix: home_assistant

sensor:
  - platform: moon

  - platform: darksky
    api_key: !secret darksky_api_key
  #   forecast:
  #     - 1
  #     - 2
  #     - 3
  #     - 4
  #     - 5
    monitored_conditions:
  #     - icon
  #     - summary
      - humidity
      - temperature
  #     - apparent_temperature
      - precip_probability
  #     - pressure
    scan_interval:
      minutes: 5

  - platform: mqtt
    name: "Pi-One Temperature"
    state_topic: "pi-one/temperature"
    unit_of_measurement: 'Â°F'
    #value_template: "{{ value_json.temperature }}"
  
  - platform: mqtt
    name: "Pi-One Humidity"
    state_topic: "pi-one/humidity"
    unit_of_measurement: '%'
    #value_template: "{{ value_json.humidity }}"

nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret

weather:
  - platform: darksky
    api_key: !secret darksky_api_key
    mode: daily

hue:
  bridges:
    - host: !secret hue_bridge_ip
      allow_unreachable: true
      # allow_hue_groups: true

camera:
  - platform: ffmpeg
    name: LivingRoomCamera-front
    input: !secret livingRoomCamera-front_rtsp
    # host: !secret living_room_camera_front_ip
    # password: !secret camera_password
    # ffmpeg_arguments: -s 800x450

  # - platform: yi
  #   name: LivingRoomCamera-side
  #   host: !secret living_room_camera_side_ip
  #   password: !secret camera_password
  #   ffmpeg_arguments: -s 800x450

device_tracker:
  - platform: ddwrt
    host: !secret router_ip
    username: !secret router_username
    password: !secret router_password

influxdb:
  host: !secret local_ip
  port: 8086
  database: !secret influx_db_database
  username: !secret influx_db_username
  password: !secret influx_db_password
  max_retries: 3
  default_measurement: state

media_player:
  - platform: spotify
    client_id: !secret spotify_client_id
    client_secret: !secret spotify_client_secret
  - platform: plex
    ip_address: !secret local_ip
    port: 32400
  
# roku:
#   - host: !secret roku_ip

lovelace:
  mode: yaml

calendar:
  - platform: caldav
    url: !secret caldav_url
    username: !secret caldav_user
    password: !secret caldav_password
    calendars:
      - !secret calendar_1_name
      - !secret calendar_2_name
      - !secret calendar_3_name
      - !secret calendar_4_name
    
tplink:
    switch:
      - host: !secret window_light_switch_ip
      - host: !secret dining_room_switch_ip
    strip:
      - host: !secret power_strip_ip

vacuum:
  - platform: roomba
    host: !secret roomba_ip
    username: !secret roomba_blid
    password: !secret roomba_password

switch:
  - platform: command_line
    switches:
      #toggles Roku TV
      tv_power:
        command_on: 'curl -X POST http://10.15.22.43:8060/keypress/PowerOn'
        command_off: 'curl -X POST http://10.15.22.43:8060/keypress/PowerOff'
        command_state: 'curl -s GET http://10.15.22.43:8060/query/device-info | grep power-mode | sed -e "s:<power-mode>DisplayOff</power-mode>:OFF:" -e "s:<power-mode>PowerOn</power-mode>:ON:"'
        value_template: '{{ value == "ON" }}'
# Lovelace won't properly toggle icons for groups, this is a workaround
  - platform: template
    switches:
        office_lights:
          value_template: "{{ is_state('group.office_lights','on') }}"
          turn_on:
            service: homeassistant.turn_on
            data:
              entity_id: group.office_lights
          turn_off:
            service: homeassistant.turn_off
            data:
              entity_id: group.office_lights
        kitchen_lights:
          value_template: "{{ is_state('group.kitchen_lights','on') }}"
          turn_on:
            service: homeassistant.turn_on
            data:
              entity_id: group.kitchen_lights
          turn_off:
            service: homeassistant.turn_off
            data:
              entity_id: group.kitchen_lights
        living_room_lights:
          value_template: "{{ is_state('group.living_room_lights','on') }}"
          turn_on:
            service: homeassistant.turn_on
            data:
              entity_id: group.living_room_lights
          turn_off:
            service: homeassistant.turn_off
            data:
              entity_id: group.living_room_lights
        dining_room_lights:
          value_template: "{{ is_state('group.dining_room_lights','on') }}"
          turn_on:
            service: homeassistant.turn_on
            data:
              entity_id: group.dining_room_lights
          turn_off:
            service: homeassistant.turn_off
            data:
              entity_id: group.dining_room_lights
        bedroom_lights:
          value_template: "{{ is_state('group.bedroom_lights','on') }}"
          turn_on:
            service: homeassistant.turn_on
            data:
              entity_id: group.bedroom_lights
          turn_off:
            service: homeassistant.turn_off
            data:
              entity_id: group.bedroom_lights

tts:
  - platform: marytts
    host: !secret mary_tts_url
    port: 59125
    codec: 'wav'
    voice: 'cmu-slt-hsmm'
    language: 'en-US'


rest_command:
  marytts:
    url: !secret rhasppy_client_url
    method: POST
    headers:
      content_type: text/plain
    payload: '{{ message }}'

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
